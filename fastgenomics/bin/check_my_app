#!/usr/bin/env python
# coding: utf-8
import argparse
import sys
import pathlib

from fastgenomics import app_checker
from pkg_resources import get_distribution

__version__ = get_distribution('fastgenomics')


def _parse_args(args: list = sys.argv[1:]) -> argparse.Namespace:
    """Argument parser for the CLI"""
    parser = argparse.ArgumentParser(description="FASTGenomics App Checker")
    parser.add_argument('--input', nargs='?', type=str, dest='app_dir', default='./',
                        help='Path to your application')
    parser.add_argument('-n', '--name', type=str, dest='app_name',
                        help='Path to sample_data', required=True)
    parser.add_argument('-r', '--registry', type=str, dest='docker_registry',
                        default=app_checker.DOCKER_REGISTRY,
                        help="URL of the docker-registry")
    parser.add_argument('-d', '--docker', dest='create_compose_file',
                        action='store_true',
                        help="create docker-compose.yml")
    parser.add_argument('-f', '--filemapping', dest='create_file_mapping',
                        action='store_true',
                        help="create input_file_mapping.json")

    return parser.parse_args()


def main():
    """main checking routine"""
    # get arguments form argparse
    args = _parse_args()
    app_dir = pathlib.Path(args.app_dir)
    sample_dir = app_dir / 'sample_data'

    # check and create
    app_checker.check_app_structure(app_dir)

    if args.create_compose_file:
        app_checker.create_docker_compose(app_dir=app_dir, app_name=args.app_name,
                              sample_dir=sample_dir,
                              docker_registry=args.docker_registry)
    if args.create_file_mapping:
        app_checker.create_file_mapping(app_dir=app_dir, sample_dir=sample_dir)


if __name__ == '__main__':
    main()